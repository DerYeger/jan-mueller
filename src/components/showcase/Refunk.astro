---
import Mark from '~/components/showcase/Mark.astro'
import Showcase from '~/components/showcase/Showcase.astro'
import ShowcaseDescription from '~/components/showcase/ShowcaseDescription.astro'
import ShowcaseTitle from '~/components/showcase/ShowcaseTitle.astro'

const name = 'Refunk'

const { default: refunkLogo } = await import(`~/assets/projects/Refunk.svg?raw`)
---

<Showcase name={name} class="refunk" link="https://refunk.yeger.eu">
  <div class="prose">
    <ShowcaseTitle>
      {name}
    </ShowcaseTitle>
  </div>
  <div
    class="refunk-logo mx-auto size-32"
  >
    <Fragment set:html={refunkLogo} />
  </div>
  <div class="prose">
    <ShowcaseDescription>
      A Kotlin library for studying <Mark>primitive recursive functions</Mark> using
      a mathematical <Mark>DSL.</Mark>
    </ShowcaseDescription>
  </div>
</Showcase>

<script>
const animationClasses = ['scale-[2500%]', 'opacity-0']
const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach((entry) => {
      const element = entry.target.getElementsByClassName('refunk-logo')[0]!
      if (!entry.isIntersecting) {
        element.classList.add(...animationClasses)
        return
      }
      observer.unobserve(entry.target)
      element.classList.add('transition-all', 'duration-700')
      element.classList.remove(...animationClasses)
    })
  },
  { threshold: 0.5 },
)

const logos = [...document.getElementsByClassName('refunk')]
logos.forEach((logo) => observer.observe(logo))
</script>
