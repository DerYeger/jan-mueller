---
import Mark from '~/components/showcase/Mark.astro'
import Showcase from '~/components/showcase/Showcase.astro'
import ShowcaseDescription from '~/components/showcase/ShowcaseDescription.astro'
import ShowcaseTitle from '~/components/showcase/ShowcaseTitle.astro'

const name = 'Refunk'

const { default: innerHTML } = await import(`~/assets/projects/Refunk.svg?raw`)
---

<Showcase name={name} class="refunk" link="https://refunk.yeger.eu">
  <div class="prose">
    <ShowcaseTitle>
      {name}
    </ShowcaseTitle>
  </div>
  <div
    class="refunk-logo mx-auto -my-4 h-48 w-48 scale-[2500%] opacity-0 transition-all duration-700"
  >
    <Fragment set:html={innerHTML} />
  </div>
  <div class="prose">
    <ShowcaseDescription>
      A Kotlin library for studying <Mark>primitive recursive functions</Mark> using
      a mathematical <Mark>DSL</Mark>.
    </ShowcaseDescription>
  </div>
</Showcase>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (!entry.isIntersecting) {
          return
        }
        const element = entry.target.getElementsByClassName('refunk-logo')[0]!
        element.classList.toggle('scale-[2500%]')
        element.classList.toggle('scale-75')
        element.classList.toggle('opacity-0')
        observer.unobserve(entry.target)
      })
    },
    { threshold: 0.9 }
  )

  const logos = [...document.getElementsByClassName('refunk')]
  logos.forEach((logo) => observer.observe(logo))
</script>
