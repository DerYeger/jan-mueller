---
import ShowcaseLink from '~/components/showcase/ShowcaseLink.astro'

interface Props {
  name: string
  class?: string
  link?: string
}

const { name, class: extraClasses = '', link } = Astro.props
---

<div
  class={`showcase card group relative flex size-full flex-col justify-between gap-6 overflow-hidden p-6 select-text ${extraClasses}`}
>
  <slot />
  {link ? <ShowcaseLink href={link} label={name} /> : null}
</div>

<script>
const animationClasses = [
  'motion-safe:opacity-0',
  'motion-safe:-translate-y-4',
]
const observer = new IntersectionObserver(
  (entries) => {
    entries.forEach((entry) => {
      const children = [...entry.target.getElementsByClassName('showcase-animate')]
      if (!entry.isIntersecting) {
        children.forEach((element) => {
          element.classList.add(...animationClasses)
        })
        return
      }
      observer.unobserve(entry.target)
      children.forEach(
        (element, index) => {
          setTimeout(() => {
            element.classList.add('transition-all', 'duration-500')
            element.classList.remove(...animationClasses)
          }, index * 100)
        },
      )
    })
  },
  { threshold: 0.1 },
)

const showcases = [...document.getElementsByClassName('showcase')]
showcases.forEach((showcase) => observer.observe(showcase))
</script>
