---
import { Picture } from '@astrojs/image/components'

export type Location = `${string}, ${string}`

export interface PhotoData {
  src: Promise<typeof import('*.png')> | Promise<typeof import('*.webp')>
  alt: (location: Location) => string
  location: Location
}

interface Props {
  photo: PhotoData
  index: number
  total: number
  initial?: boolean
}

const { photo, initial = false, index, total } = Astro.props
const { src, alt, location } = photo
---

<div
  class={`photo group absolute inset-0 transition-opacity duration-1000 ${
    initial ? 'z-10' : 'opacity-0'
  }`}
>
  <div
    class="absolute inset-x-0 top-3 flex justify-center gap-2 opacity-0 transition-opacity duration-500 group-hover:opacity-100"
  >
    {
      Array.from({ length: total }, (_, i) => (
        <div
          class={`dot h-2 w-2 cursor-pointer rounded-full ${
            i === index ? 'bg-white' : 'glass opacity-75'
          }`}
          data-index={i}
        />
      ))
    }
  </div>
  <Picture
    src={src}
    alt={alt(location)}
    widths={[768]}
    sizes="768px"
    aspectRatio={1}
    quality={85}
    format={['avif', 'webp']}
    loading="lazy"
    class="m-0 h-full w-full object-cover"
  />
  <div
    class="glass absolute inset-x-3 bottom-2 rounded-3xl px-2 py-1 text-center text-xs opacity-0 transition-opacity duration-500 group-hover:opacity-100"
  >
    {location}
  </div>
</div>
