---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/base.css'

export interface Props {
  title?: string | undefined
  description?: string | undefined
  image?: string | undefined
}

const { title, description, image } = Astro.props as Props

const finalTitle = title ? `${title} – Jan Müller` : 'Jan Müller'
const finalDescription =
  description ??
  'Personal website of Jan Müller, a passionate software engineer.'
const finalImage = new URL(
  image ??
    'https://og-image-deryeger.vercel.app/**Jan%20M%C3%BCller**.png?theme=dark&md=1&fontSize=225px&images=https%3A%2F%2Fjan-mueller.at%2Fog-image-light.svg'
)
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="mask-icon" href="/favicon.svg" color="#333" />
<meta name="theme-color" content="#000000" />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{finalTitle}</title>
<meta name="title" content={finalTitle} />
<meta name="description" content={finalDescription} />
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={finalTitle} />
<meta property="og:description" content={finalDescription} />
<meta property="og:image" content={finalImage} />

<!-- Twitter -->
<meta property="twitter:creator" content="@DerYeger" />
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={finalTitle} />
<meta property="twitter:description" content={finalDescription} />
<meta property="twitter:image" content={finalImage} />

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()
  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }
  window.localStorage.setItem('theme', theme)
</script>
